# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:
- job: 'Linux'
  pool:
    vmImage: 'ubuntu-16.04'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      addToPath: true
  - script: |
      pip install numpy cython pytest
      pip install -e .
      pytest
    displayName: 'Ubuntu Tests'
  # Build the python distribution from source
  - script: |
      pip install wheel twine
      python setup.py sdist
  # Release
  - task: TwineAuthenticate@1
    inputs:
      pythonUploadServiceConnection: pypi
  - script: |
      python -m twine upload -r mypypi --config-file $(PYPIRC_PATH) dist/*
    displayName: 'Ubuntu Release'

- job: 'Win'
  pool:
    vmImage: 'vs2017-win2016'
  strategy:
    matrix:
      Python27:
        python.version: '2.7'
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      addToPath: true
  - script: |
      pip install numpy cython pytest
      pip install -e .
      pytest
    displayName: 'Win Tests'
  # Build the python distribution from source
  - script: |
      pip install wheel twine
      python setup.py bdist_wheel
  # Release
  - task: TwineAuthenticate@1
    inputs:
      pythonUploadServiceConnection: pypi
  - script: |
      python -m twine upload -r mypypi --config-file $(PYPIRC_PATH) dist/*.whl
    displayName: 'Win Release'

- job: 'OSX'
  pool:
    vmImage: 'macOS-10.13'
  strategy:
    matrix:
      Python27:
        python.version: '2.7'
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      addToPath: true
  - script: |
      pip install numpy cython pytest
      pip install -e .
      pytest
    displayName: 'OSX Tests'
  - script: |
      pip install wheel twine
      python setup.py bdist_wheel
  # Release
  - task: TwineAuthenticate@1
    inputs:
      pythonUploadServiceConnection: pypi
  - script: |
      python -m twine upload -r mypypi --config-file $(PYPIRC_PATH) dist/*.whl
    displayName: 'OSX Release'
